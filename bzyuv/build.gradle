plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'com.luoye.bzyuvlib'
    compileSdk = libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk = libs.versions.minSdk.get().toInteger()
        targetSdk = libs.versions.targetSdk.get().toInteger()
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '4.1.1'
        }
    }
    ndkVersion '28.2.13676358'

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

ext {
    NEXUS_USER = ''
    NEXUS_PASSWORD = ''
    RELEASE_SNAPSHOT = false

    POM_URL_SNAP = 'https://nexus.raoyunsoft.com/repository/maven-snapshots/'
    POM_URL = 'https://nexus.raoyunsoft.com/repository/maven-releases/'

    POM_GROUP_ID = 'com.guaishou.bzlib'
    POM_ATRIFACT_ID = 'bzyuv'
    POM_VERSION = '1.1.22'
}
if (System.getenv('NEXUS_USER')) {
    NEXUS_USER = System.getenv('NEXUS_USER')
}
if (System.getenv('NEXUS_PASSWORD')) {
    NEXUS_PASSWORD = System.getenv('NEXUS_PASSWORD')
}
println("NEXUS_USER=" + NEXUS_USER + " NEXUS_PASSWORD=" + NEXUS_PASSWORD)

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = POM_GROUP_ID
                artifactId = POM_ATRIFACT_ID
                version = RELEASE_SNAPSHOT ? POM_VERSION + "-SNAPSHOT" : POM_VERSION
            }
        }
        repositories {
            maven {
                url RELEASE_SNAPSHOT ? POM_URL_SNAP : POM_URL
                credentials {
                    username NEXUS_USER
                    password NEXUS_PASSWORD
                }
            }
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach { it.dependsOn lint }

tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.getSrcDirs()
}
artifacts {
    archives androidSourcesJar
}

dependencies {

}

